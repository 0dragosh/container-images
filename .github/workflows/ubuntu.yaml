name: ubuntu
on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Use this tag instead of most recent'
        required: false
      ignore-existing-tag:
        description: 'Ignore existing tag if "true"'
        required: false
env:
  IMAGES: k8sathome/${{ github.workflow }}
  PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"

jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check-tag.outputs.exists }}
      tag: ${{ steps.check-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Upstream Version
        id: check
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]
          then
            TAG_NAME=${{ github.event.inputs.tag }}
          else
            TAG_NAME=$(curl -s https://registry.hub.docker.com/v1/repositories/library/${{ github.workflow }}/tags | jq -r '.[] | select(.name | contains("focal")) | .name'  | tail -n1)
          fi
          echo "::set-env name=version::${TAG_NAME}"
      - uses: ./.github/actions/tag-check-action
        name: Check Tag Against DockerHub
        id: check-tag
        with:
          image: library/${{ github.workflow }}
          tag: ${{ github.event.inputs.tag || env.version }}
          skip: ${{ github.event.inputs.ignore-existing-tag }}
  image-build:
    needs: version-check
    runs-on: ubuntu-latest
    if: ${{ contains(needs.version-check.outputs.exists, 'false') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # - uses: ./.github/actions/docker-target-image-list-action
      #   name: Generate Target Images
      #   id: gen-tags
      #   with:
      #     images: ${{ env.IMAGES }}
      #     tags: ${{ needs.version-check.outputs.tag }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master
      - name: Dockerhub Login
        run: |
          echo "ðŸ”‘ Logging into Dockerhub..."
          if docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} > /dev/null 2>&1; then
            echo "ðŸŽ‰ Login Succeeded!"
          fi
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./${{ github.workflow }}/Dockerfile
          build-args: VERSION=${{ needs.version-check.outputs.tag }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.gen-tags.outputs.fully-qualified-target-images }}
          pull: true
          push: true
