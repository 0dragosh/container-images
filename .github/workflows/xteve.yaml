---
name: xteve
on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Insert tag'
        required: false
      ignore-existing-tag:
        description: 'Force build and push if "true"'
        required: false
env:
  REGISTRY_IMAGE: k8sathome/${{ github.workflow }}
jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check-tag.outputs.exists }}
      tag: ${{ steps.check-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Upstream Version
        id: check
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]
          then
            TAG_NAME=${{ github.event.inputs.tag }}
          else
            TAG_NAME=$(curl -s https://api.github.com/repos/xteve-project/xTeVe/releases | jq -r .[0].tag_name)
          fi
          echo "version=${TAG_NAME}" >> $GITHUB_ENV
      - uses: ./.github/actions/tag-check-action
        name: Check Tag Against DockerHub
        id: check-tag
        with:
          image: ${{ env.REGISTRY_IMAGE }}
          tag: ${{ github.event.inputs.tag || env.version }}
          skip: ${{ github.event.inputs.ignore-existing-tag }}
  image-build:
    needs: version-check
    runs-on: ubuntu-latest
    if: ${{ contains(needs.version-check.outputs.exists, 'false') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master
      - name: Dockerhub Login
        run: |
          echo "ðŸ”‘ Logging into Dockerhub..."
          if docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} > /dev/null 2>&1; then
            echo "ðŸŽ‰ Login Succeeded!"
          fi
      - name: Build and Push
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./${{ github.workflow }}/Dockerfile
          build-args: VERSION=${{ needs.version-check.outputs.tag }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ env.REGISTRY_IMAGE }}:${{ needs.version-check.outputs.tag }}
          pull: true
          push: true
